name: CI/CD Pipeline

'on':
  workflow_dispatch: {}
  push: {}

jobs:
  dotnet_build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup DotNET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.402

    - name: Restore Dependencies
      run: dotnet restore

    - name: Run Tests
      run: dotnet test -l:trx

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: dotnet_build_and_test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_SAMPLES_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SAMPLES_PASSWORD }}
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.14
      with:
        additionalArguments: /overrideconfig mode=Mainline
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: RandomQuotes
        push: true
        tags: dsmercy/randomquotes:${{ steps.determine_version.outputs.semVer }}

  octopus_deploy:
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1.1.1
      with:
        version: latest

    - name: Create Octopus Release
      uses: OctopusDeploy/create-release-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        project: Random Quotes
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
        deploy_to: Dev
        packages: Deploy container to Kubernetes:randomquotes:${{ steps.determine_version.outputs.semVer }}
